# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: cimg/go:1.19.4

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
  #  working_directory: /go/src/github.com/lsochanowski/GoHeishaMon
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get github.com/rs/xid
      - run: go get github.com/BurntSushi/toml
      - run: go get github.com/eclipse/paho.mqtt.golang
      - run: go get go.bug.st/serial
      - run: make
#      - run: sudo apt update
#      - run: sudo apt install -y upx squashfs-tools && sudo apt-get clean
#      - run: make upx
#      - run: make compilesquash
#      - run: cp OS/Kernel/openwrt-ar71xx-generic-cus531-16M-kernel.bin dist/
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            go install github.com/tcnksm/ghr
            VERSION=$(git rev-parse --short HEAD)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete 1.0.${CIRCLE_BUILD_NUM} dist/
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(my-binary --version)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
